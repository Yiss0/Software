
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  role: 'role',
  password: 'password',
  birthDate: 'birthDate',
  address: 'address',
  emergencyContact: 'emergencyContact',
  emergencyPhone: 'emergencyPhone',
  medicalConditions: 'medicalConditions',
  allergies: 'allergies',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MedicationScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  name: 'name',
  dosage: 'dosage',
  quantity: 'quantity',
  presentation: 'presentation',
  instructions: 'instructions',
  color: 'color',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.ScheduleScalarFieldEnum = {
  id: 'id',
  medicationId: 'medicationId',
  time: 'time',
  frequencyType: 'frequencyType',
  frequencyValue: 'frequencyValue',
  daysOfWeek: 'daysOfWeek',
  endDate: 'endDate',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IntakeLogScalarFieldEnum = {
  id: 'id',
  medicationId: 'medicationId',
  scheduleId: 'scheduleId',
  scheduledFor: 'scheduledFor',
  action: 'action',
  actionAt: 'actionAt',
  note: 'note',
  createdAt: 'createdAt'
};

exports.Prisma.PatientCaregiverScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  caregiverId: 'caregiverId',
  relation: 'relation',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Medication: 'Medication',
  Schedule: 'Schedule',
  IntakeLog: 'IntakeLog',
  PatientCaregiver: 'PatientCaregiver'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Jesús\\Desktop\\Universidad\\IngSoftware\\PastillApp\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Jesús\\Desktop\\Universidad\\IngSoftware\\PastillApp\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                String   @id @default(cuid())\n  firstName         String\n  lastName          String\n  email             String?  @unique\n  phone             String?\n  role              String   @default(\"PATIENT\") // \"PATIENT\" | \"CAREGIVER\"\n  password          String?\n  birthDate         String?\n  address           String?\n  emergencyContact  String?\n  emergencyPhone    String?\n  medicalConditions String?\n  allergies         String?\n  createdAt         DateTime @default(now()) @db.Timestamptz\n  updatedAt         DateTime @updatedAt @db.Timestamptz\n\n  medications Medication[]\n\n  // Relaciones M:N Paciente <-> Cuidador\n  patientLinks   PatientCaregiver[] @relation(\"PC_Patient\")\n  caregiverLinks PatientCaregiver[] @relation(\"PC_Caregiver\")\n}\n\nmodel Medication {\n  id           String    @id @default(cuid())\n  patient      User      @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  patientId    String\n  name         String\n  dosage       String?\n  quantity     Int?\n  presentation String?\n  instructions String?\n  color        String?\n  active       Boolean   @default(true)\n  createdAt    DateTime  @default(now()) @db.Timestamptz\n  updatedAt    DateTime  @updatedAt @db.Timestamptz\n  deletedAt    DateTime? @db.Timestamptz\n\n  schedules Schedule[]\n  intakes   IntakeLog[]\n\n  @@index([patientId])\n}\n\nmodel Schedule {\n  id             String     @id @default(cuid())\n  medication     Medication @relation(fields: [medicationId], references: [id], onDelete: Cascade)\n  medicationId   String\n  time           String\n  frequencyType  String\n  frequencyValue Int?\n  daysOfWeek     String?\n  endDate        String?\n  active         Boolean    @default(true)\n  createdAt      DateTime   @default(now()) @db.Timestamptz\n  updatedAt      DateTime   @updatedAt @db.Timestamptz\n\n  intakes IntakeLog[]\n\n  @@index([medicationId])\n}\n\nmodel IntakeLog {\n  id           String     @id @default(cuid())\n  medication   Medication @relation(fields: [medicationId], references: [id], onDelete: Cascade)\n  medicationId String\n  schedule     Schedule?  @relation(fields: [scheduleId], references: [id])\n  scheduleId   String?\n  scheduledFor DateTime   @db.Timestamptz\n  action       String // \"CONFIRMED\" | \"SNOOZED\" | \"SKIPPED\" | \"POSTPONED\" (validado en API)\n  actionAt     DateTime   @db.Timestamptz\n  note         String?\n  createdAt    DateTime   @default(now()) @db.Timestamptz\n\n  @@index([medicationId, scheduledFor])\n}\n\nmodel PatientCaregiver {\n  id String @id @default(cuid())\n\n  // Paciente (User con role=\"PATIENT\")\n  patient   User   @relation(\"PC_Patient\", fields: [patientId], references: [id], onDelete: Cascade)\n  patientId String\n\n  // Cuidador (User con role=\"CAREGIVER\")\n  caregiver   User   @relation(\"PC_Caregiver\", fields: [caregiverId], references: [id], onDelete: Cascade)\n  caregiverId String\n\n  relation  String?\n  createdAt DateTime @default(now()) @db.Timestamptz\n\n  @@unique([patientId, caregiverId]) // evita duplicados\n  @@index([caregiverId])\n  @@index([patientId])\n}\n",
  "inlineSchemaHash": "52f99abfc7d4f8675b36da5569d5d82bcf6d9d3b3791aa2e58c7e496dba60f85",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicalConditions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allergies\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"medications\",\"kind\":\"object\",\"type\":\"Medication\",\"relationName\":\"MedicationToUser\"},{\"name\":\"patientLinks\",\"kind\":\"object\",\"type\":\"PatientCaregiver\",\"relationName\":\"PC_Patient\"},{\"name\":\"caregiverLinks\",\"kind\":\"object\",\"type\":\"PatientCaregiver\",\"relationName\":\"PC_Caregiver\"}],\"dbName\":null},\"Medication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MedicationToUser\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dosage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"presentation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instructions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"schedules\",\"kind\":\"object\",\"type\":\"Schedule\",\"relationName\":\"MedicationToSchedule\"},{\"name\":\"intakes\",\"kind\":\"object\",\"type\":\"IntakeLog\",\"relationName\":\"IntakeLogToMedication\"}],\"dbName\":null},\"Schedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medication\",\"kind\":\"object\",\"type\":\"Medication\",\"relationName\":\"MedicationToSchedule\"},{\"name\":\"medicationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequencyType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequencyValue\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"daysOfWeek\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"intakes\",\"kind\":\"object\",\"type\":\"IntakeLog\",\"relationName\":\"IntakeLogToSchedule\"}],\"dbName\":null},\"IntakeLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medication\",\"kind\":\"object\",\"type\":\"Medication\",\"relationName\":\"IntakeLogToMedication\"},{\"name\":\"medicationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"schedule\",\"kind\":\"object\",\"type\":\"Schedule\",\"relationName\":\"IntakeLogToSchedule\"},{\"name\":\"scheduleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduledFor\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actionAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PatientCaregiver\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PC_Patient\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caregiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PC_Caregiver\"},{\"name\":\"caregiverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

